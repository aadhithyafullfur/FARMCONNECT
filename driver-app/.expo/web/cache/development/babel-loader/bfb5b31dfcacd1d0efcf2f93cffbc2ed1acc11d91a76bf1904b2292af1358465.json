{"ast":null,"code":"import _asyncToGenerator from \"@babel/runtime/helpers/asyncToGenerator\";\nimport _slicedToArray from \"@babel/runtime/helpers/slicedToArray\";\nimport React, { useState, useEffect } from 'react';\nimport View from \"react-native-web/dist/exports/View\";\nimport StyleSheet from \"react-native-web/dist/exports/StyleSheet\";\nimport ScrollView from \"react-native-web/dist/exports/ScrollView\";\nimport RefreshControl from \"react-native-web/dist/exports/RefreshControl\";\nimport Alert from \"react-native-web/dist/exports/Alert\";\nimport Dimensions from \"react-native-web/dist/exports/Dimensions\";\nimport { Card, Title, Paragraph, Button, Switch, Chip, FAB, Badge, useTheme, ActivityIndicator } from 'react-native-paper';\nimport { Ionicons } from '@expo/vector-icons';\nimport { useAuth } from \"../context/AuthContext\";\nimport { orderAPI, locationAPI } from \"../services/api\";\nimport { jsx as _jsx, jsxs as _jsxs } from \"react/jsx-runtime\";\nvar _Dimensions$get = Dimensions.get('window'),\n  width = _Dimensions$get.width;\nvar DashboardScreen = function DashboardScreen(_ref) {\n  var navigation = _ref.navigation;\n  var _useState = useState([]),\n    _useState2 = _slicedToArray(_useState, 2),\n    orders = _useState2[0],\n    setOrders = _useState2[1];\n  var _useState3 = useState({\n      today: 0,\n      week: 0,\n      month: 0,\n      total: 0\n    }),\n    _useState4 = _slicedToArray(_useState3, 2),\n    earnings = _useState4[0],\n    setEarnings = _useState4[1];\n  var _useState5 = useState(false),\n    _useState6 = _slicedToArray(_useState5, 2),\n    isAvailable = _useState6[0],\n    setIsAvailable = _useState6[1];\n  var _useState7 = useState(true),\n    _useState8 = _slicedToArray(_useState7, 2),\n    loading = _useState8[0],\n    setLoading = _useState8[1];\n  var _useState9 = useState(false),\n    _useState0 = _slicedToArray(_useState9, 2),\n    refreshing = _useState0[0],\n    setRefreshing = _useState0[1];\n  var theme = useTheme();\n  var _useAuth = useAuth(),\n    driver = _useAuth.driver,\n    logout = _useAuth.logout;\n  useEffect(function () {\n    fetchDashboardData();\n  }, []);\n  var fetchDashboardData = function () {\n    var _ref2 = _asyncToGenerator(function* () {\n      try {\n        var _yield$Promise$all = yield Promise.all([orderAPI.getOrders(), orderAPI.getEarnings()]),\n          _yield$Promise$all2 = _slicedToArray(_yield$Promise$all, 2),\n          ordersResponse = _yield$Promise$all2[0],\n          earningsResponse = _yield$Promise$all2[1];\n        setOrders(ordersResponse.data.orders || []);\n        setEarnings(earningsResponse.data.earnings || {\n          today: 0,\n          week: 0,\n          month: 0,\n          total: 0\n        });\n      } catch (error) {\n        console.error('Error fetching dashboard data:', error);\n        Alert.alert('Error', 'Failed to load dashboard data');\n      } finally {\n        setLoading(false);\n        setRefreshing(false);\n      }\n    });\n    return function fetchDashboardData() {\n      return _ref2.apply(this, arguments);\n    };\n  }();\n  var onRefresh = function onRefresh() {\n    setRefreshing(true);\n    fetchDashboardData();\n  };\n  var toggleAvailability = function () {\n    var _ref3 = _asyncToGenerator(function* () {\n      try {\n        var newAvailability = !isAvailable;\n        yield locationAPI.toggleAvailability(newAvailability);\n        setIsAvailable(newAvailability);\n        Alert.alert('Status Updated', `You are now ${newAvailability ? 'available' : 'unavailable'} for deliveries`);\n      } catch (error) {\n        console.error('Error toggling availability:', error);\n        Alert.alert('Error', 'Failed to update availability status');\n      }\n    });\n    return function toggleAvailability() {\n      return _ref3.apply(this, arguments);\n    };\n  }();\n  var handleAcceptOrder = function () {\n    var _ref4 = _asyncToGenerator(function* (orderId) {\n      try {\n        yield orderAPI.acceptOrder(orderId);\n        Alert.alert('Success', 'Order accepted successfully');\n        fetchDashboardData();\n      } catch (error) {\n        console.error('Error accepting order:', error);\n        Alert.alert('Error', 'Failed to accept order');\n      }\n    });\n    return function handleAcceptOrder(_x) {\n      return _ref4.apply(this, arguments);\n    };\n  }();\n  var getStatusColor = function getStatusColor(status) {\n    switch (status) {\n      case 'pending':\n        return '#f59e0b';\n      case 'accepted':\n        return '#3b82f6';\n      case 'in_transit':\n        return '#8b5cf6';\n      case 'delivered':\n        return '#10b981';\n      default:\n        return '#6b7280';\n    }\n  };\n  var getStatusText = function getStatusText(status) {\n    switch (status) {\n      case 'pending':\n        return 'New Order';\n      case 'accepted':\n        return 'Accepted';\n      case 'in_transit':\n        return 'In Transit';\n      case 'delivered':\n        return 'Delivered';\n      default:\n        return status;\n    }\n  };\n  if (loading) {\n    return _jsxs(View, {\n      style: styles.loadingContainer,\n      children: [_jsx(ActivityIndicator, {\n        size: \"large\",\n        color: theme.colors.primary\n      }), _jsx(Paragraph, {\n        style: styles.loadingText,\n        children: \"Loading dashboard...\"\n      })]\n    });\n  }\n  return _jsxs(View, {\n    style: styles.container,\n    children: [_jsxs(ScrollView, {\n      style: styles.scrollView,\n      refreshControl: _jsx(RefreshControl, {\n        refreshing: refreshing,\n        onRefresh: onRefresh\n      }),\n      children: [_jsxs(View, {\n        style: styles.header,\n        children: [_jsxs(View, {\n          children: [_jsxs(Title, {\n            style: styles.greeting,\n            children: [\"Hello, \", (driver == null ? void 0 : driver.name) || 'Driver', \"!\"]\n          }), _jsx(Paragraph, {\n            style: styles.subtitle,\n            children: \"Ready to make some deliveries?\"\n          })]\n        }), _jsx(Button, {\n          mode: \"text\",\n          icon: \"logout\",\n          onPress: logout,\n          style: styles.logoutButton,\n          children: \"Logout\"\n        })]\n      }), _jsx(Card, {\n        style: styles.card,\n        children: _jsxs(Card.Content, {\n          style: styles.availabilityCard,\n          children: [_jsxs(View, {\n            style: styles.availabilityInfo,\n            children: [_jsx(Ionicons, {\n              name: isAvailable ? \"checkmark-circle\" : \"close-circle\",\n              size: 24,\n              color: isAvailable ? theme.colors.success : theme.colors.error\n            }), _jsx(Title, {\n              style: styles.availabilityTitle,\n              children: isAvailable ? 'Online' : 'Offline'\n            })]\n          }), _jsx(Switch, {\n            value: isAvailable,\n            onValueChange: toggleAvailability,\n            color: theme.colors.primary\n          })]\n        })\n      }), _jsx(Card, {\n        style: styles.card,\n        children: _jsxs(Card.Content, {\n          children: [_jsx(Title, {\n            style: styles.sectionTitle,\n            children: \"Today's Earnings\"\n          }), _jsxs(View, {\n            style: styles.earningsGrid,\n            children: [_jsxs(View, {\n              style: styles.earningItem,\n              children: [_jsx(Paragraph, {\n                style: styles.earningLabel,\n                children: \"Today\"\n              }), _jsxs(Title, {\n                style: [styles.earningAmount, {\n                  color: theme.colors.primary\n                }],\n                children: [\"\\u20B9\", earnings.today]\n              })]\n            }), _jsxs(View, {\n              style: styles.earningItem,\n              children: [_jsx(Paragraph, {\n                style: styles.earningLabel,\n                children: \"This Week\"\n              }), _jsxs(Title, {\n                style: [styles.earningAmount, {\n                  color: theme.colors.secondary\n                }],\n                children: [\"\\u20B9\", earnings.week]\n              })]\n            }), _jsxs(View, {\n              style: styles.earningItem,\n              children: [_jsx(Paragraph, {\n                style: styles.earningLabel,\n                children: \"This Month\"\n              }), _jsxs(Title, {\n                style: [styles.earningAmount, {\n                  color: theme.colors.accent\n                }],\n                children: [\"\\u20B9\", earnings.month]\n              })]\n            }), _jsxs(View, {\n              style: styles.earningItem,\n              children: [_jsx(Paragraph, {\n                style: styles.earningLabel,\n                children: \"Total\"\n              }), _jsxs(Title, {\n                style: [styles.earningAmount, {\n                  color: theme.colors.primary\n                }],\n                children: [\"\\u20B9\", earnings.total]\n              })]\n            })]\n          })]\n        })\n      }), _jsxs(View, {\n        style: styles.ordersHeader,\n        children: [_jsxs(Title, {\n          style: styles.sectionTitle,\n          children: [\"Orders (\", orders.length, \")\"]\n        }), orders.length > 0 && _jsx(Badge, {\n          style: styles.ordersBadge,\n          children: orders.length\n        })]\n      }), orders.length === 0 ? _jsx(Card, {\n        style: styles.card,\n        children: _jsxs(Card.Content, {\n          style: styles.emptyState,\n          children: [_jsx(Ionicons, {\n            name: \"car-outline\",\n            size: 48,\n            color: theme.colors.disabled\n          }), _jsx(Paragraph, {\n            style: styles.emptyStateText,\n            children: isAvailable ? \"No orders available at the moment\" : \"Go online to receive orders\"\n          })]\n        })\n      }) : orders.map(function (order) {\n        return _jsx(Card, {\n          style: styles.orderCard,\n          children: _jsxs(Card.Content, {\n            children: [_jsxs(View, {\n              style: styles.orderHeader,\n              children: [_jsxs(Title, {\n                style: styles.orderTitle,\n                children: [\"Order #\", order.orderNumber || order._id.slice(-6)]\n              }), _jsx(Chip, {\n                style: [styles.statusChip, {\n                  backgroundColor: getStatusColor(order.status)\n                }],\n                textStyle: {\n                  color: 'white'\n                },\n                children: getStatusText(order.status)\n              })]\n            }), _jsxs(View, {\n              style: styles.orderDetails,\n              children: [_jsxs(View, {\n                style: styles.orderDetailRow,\n                children: [_jsx(Ionicons, {\n                  name: \"location-outline\",\n                  size: 16,\n                  color: theme.colors.primary\n                }), _jsx(Paragraph, {\n                  style: styles.orderDetailText,\n                  children: order.pickupAddress || 'Pickup address not available'\n                })]\n              }), _jsxs(View, {\n                style: styles.orderDetailRow,\n                children: [_jsx(Ionicons, {\n                  name: \"navigate-outline\",\n                  size: 16,\n                  color: theme.colors.secondary\n                }), _jsx(Paragraph, {\n                  style: styles.orderDetailText,\n                  children: order.deliveryAddress || order.shippingAddress || 'Delivery address not available'\n                })]\n              }), _jsxs(View, {\n                style: styles.orderDetailRow,\n                children: [_jsx(Ionicons, {\n                  name: \"cash-outline\",\n                  size: 16,\n                  color: theme.colors.success\n                }), _jsxs(Paragraph, {\n                  style: styles.orderDetailText,\n                  children: [\"Delivery Fee: \\u20B9\", order.deliveryFee || 50]\n                })]\n              })]\n            }), _jsxs(View, {\n              style: styles.orderActions,\n              children: [order.status === 'pending' && _jsx(Button, {\n                mode: \"contained\",\n                onPress: function onPress() {\n                  return handleAcceptOrder(order._id);\n                },\n                style: styles.acceptButton,\n                icon: \"check\",\n                children: \"Accept Order\"\n              }), _jsx(Button, {\n                mode: \"outlined\",\n                onPress: function onPress() {\n                  return navigation.navigate('OrderDetails', {\n                    orderId: order._id\n                  });\n                },\n                style: styles.detailsButton,\n                icon: \"eye\",\n                children: \"View Details\"\n              })]\n            })]\n          })\n        }, order._id);\n      })]\n    }), _jsx(FAB, {\n      style: styles.fab,\n      icon: \"map\",\n      onPress: function onPress() {\n        return navigation.navigate('Map');\n      },\n      color: \"white\"\n    })]\n  });\n};\nvar styles = StyleSheet.create({\n  container: {\n    flex: 1,\n    backgroundColor: '#f8fafc'\n  },\n  loadingContainer: {\n    flex: 1,\n    justifyContent: 'center',\n    alignItems: 'center',\n    backgroundColor: '#f8fafc'\n  },\n  loadingText: {\n    marginTop: 10,\n    color: '#6b7280'\n  },\n  scrollView: {\n    flex: 1\n  },\n  header: {\n    flexDirection: 'row',\n    justifyContent: 'space-between',\n    alignItems: 'center',\n    padding: 20,\n    paddingTop: 60\n  },\n  greeting: {\n    fontSize: 24,\n    fontWeight: 'bold'\n  },\n  subtitle: {\n    color: '#6b7280',\n    marginTop: 5\n  },\n  logoutButton: {\n    marginTop: 10\n  },\n  card: {\n    marginHorizontal: 20,\n    marginBottom: 15,\n    elevation: 2,\n    borderRadius: 12\n  },\n  availabilityCard: {\n    flexDirection: 'row',\n    justifyContent: 'space-between',\n    alignItems: 'center'\n  },\n  availabilityInfo: {\n    flexDirection: 'row',\n    alignItems: 'center'\n  },\n  availabilityTitle: {\n    marginLeft: 10,\n    fontSize: 18\n  },\n  sectionTitle: {\n    fontSize: 18,\n    fontWeight: 'bold',\n    marginBottom: 15\n  },\n  earningsGrid: {\n    flexDirection: 'row',\n    flexWrap: 'wrap',\n    justifyContent: 'space-between'\n  },\n  earningItem: {\n    width: width * 0.4,\n    alignItems: 'center',\n    marginBottom: 15\n  },\n  earningLabel: {\n    fontSize: 12,\n    color: '#6b7280',\n    marginBottom: 5\n  },\n  earningAmount: {\n    fontSize: 20,\n    fontWeight: 'bold'\n  },\n  ordersHeader: {\n    flexDirection: 'row',\n    justifyContent: 'space-between',\n    alignItems: 'center',\n    paddingHorizontal: 20,\n    marginBottom: 10\n  },\n  ordersBadge: {\n    backgroundColor: '#22c55e'\n  },\n  orderCard: {\n    marginHorizontal: 20,\n    marginBottom: 15,\n    elevation: 2,\n    borderRadius: 12\n  },\n  orderHeader: {\n    flexDirection: 'row',\n    justifyContent: 'space-between',\n    alignItems: 'center',\n    marginBottom: 15\n  },\n  orderTitle: {\n    fontSize: 16,\n    fontWeight: 'bold'\n  },\n  statusChip: {\n    borderRadius: 20\n  },\n  orderDetails: {\n    marginBottom: 15\n  },\n  orderDetailRow: {\n    flexDirection: 'row',\n    alignItems: 'center',\n    marginBottom: 8\n  },\n  orderDetailText: {\n    marginLeft: 8,\n    flex: 1,\n    fontSize: 14\n  },\n  orderActions: {\n    flexDirection: 'row',\n    justifyContent: 'space-between'\n  },\n  acceptButton: {\n    flex: 1,\n    marginRight: 10\n  },\n  detailsButton: {\n    flex: 1,\n    marginLeft: 10\n  },\n  emptyState: {\n    alignItems: 'center',\n    paddingVertical: 30\n  },\n  emptyStateText: {\n    marginTop: 10,\n    textAlign: 'center',\n    color: '#6b7280'\n  },\n  fab: {\n    position: 'absolute',\n    margin: 16,\n    right: 0,\n    bottom: 0,\n    backgroundColor: '#22c55e'\n  }\n});\nexport default DashboardScreen;","map":{"version":3,"names":["React","useState","useEffect","View","StyleSheet","ScrollView","RefreshControl","Alert","Dimensions","Card","Title","Paragraph","Button","Switch","Chip","FAB","Badge","useTheme","ActivityIndicator","Ionicons","useAuth","orderAPI","locationAPI","jsx","_jsx","jsxs","_jsxs","_Dimensions$get","get","width","DashboardScreen","_ref","navigation","_useState","_useState2","_slicedToArray","orders","setOrders","_useState3","today","week","month","total","_useState4","earnings","setEarnings","_useState5","_useState6","isAvailable","setIsAvailable","_useState7","_useState8","loading","setLoading","_useState9","_useState0","refreshing","setRefreshing","theme","_useAuth","driver","logout","fetchDashboardData","_ref2","_asyncToGenerator","_yield$Promise$all","Promise","all","getOrders","getEarnings","_yield$Promise$all2","ordersResponse","earningsResponse","data","error","console","alert","apply","arguments","onRefresh","toggleAvailability","_ref3","newAvailability","handleAcceptOrder","_ref4","orderId","acceptOrder","_x","getStatusColor","status","getStatusText","style","styles","loadingContainer","children","size","color","colors","primary","loadingText","container","scrollView","refreshControl","header","greeting","name","subtitle","mode","icon","onPress","logoutButton","card","Content","availabilityCard","availabilityInfo","success","availabilityTitle","value","onValueChange","sectionTitle","earningsGrid","earningItem","earningLabel","earningAmount","secondary","accent","ordersHeader","length","ordersBadge","emptyState","disabled","emptyStateText","map","order","orderCard","orderHeader","orderTitle","orderNumber","_id","slice","statusChip","backgroundColor","textStyle","orderDetails","orderDetailRow","orderDetailText","pickupAddress","deliveryAddress","shippingAddress","deliveryFee","orderActions","acceptButton","navigate","detailsButton","fab","create","flex","justifyContent","alignItems","marginTop","flexDirection","padding","paddingTop","fontSize","fontWeight","marginHorizontal","marginBottom","elevation","borderRadius","marginLeft","flexWrap","paddingHorizontal","marginRight","paddingVertical","textAlign","position","margin","right","bottom"],"sources":["D:/Projects/Farmer_connect/FARMCONNECT/driver-app/src/screens/DashboardScreen.js"],"sourcesContent":["import React, { useState, useEffect } from 'react';\r\nimport {\r\n  View,\r\n  StyleSheet,\r\n  ScrollView,\r\n  RefreshControl,\r\n  Alert,\r\n  Dimensions,\r\n} from 'react-native';\r\nimport {\r\n  Card,\r\n  Title,\r\n  Paragraph,\r\n  Button,\r\n  Switch,\r\n  Chip,\r\n  FAB,\r\n  Badge,\r\n  useTheme,\r\n  ActivityIndicator,\r\n} from 'react-native-paper';\r\nimport { Ionicons } from '@expo/vector-icons';\r\nimport { useAuth } from '../context/AuthContext';\r\nimport { orderAPI, locationAPI } from '../services/api';\r\n\r\nconst { width } = Dimensions.get('window');\r\n\r\nconst DashboardScreen = ({ navigation }) => {\r\n  const [orders, setOrders] = useState([]);\r\n  const [earnings, setEarnings] = useState({ today: 0, week: 0, month: 0, total: 0 });\r\n  const [isAvailable, setIsAvailable] = useState(false);\r\n  const [loading, setLoading] = useState(true);\r\n  const [refreshing, setRefreshing] = useState(false);\r\n  \r\n  const theme = useTheme();\r\n  const { driver, logout } = useAuth();\r\n\r\n  useEffect(() => {\r\n    fetchDashboardData();\r\n  }, []);\r\n\r\n  const fetchDashboardData = async () => {\r\n    try {\r\n      const [ordersResponse, earningsResponse] = await Promise.all([\r\n        orderAPI.getOrders(),\r\n        orderAPI.getEarnings(),\r\n      ]);\r\n      \r\n      setOrders(ordersResponse.data.orders || []);\r\n      setEarnings(earningsResponse.data.earnings || { today: 0, week: 0, month: 0, total: 0 });\r\n    } catch (error) {\r\n      console.error('Error fetching dashboard data:', error);\r\n      Alert.alert('Error', 'Failed to load dashboard data');\r\n    } finally {\r\n      setLoading(false);\r\n      setRefreshing(false);\r\n    }\r\n  };\r\n\r\n  const onRefresh = () => {\r\n    setRefreshing(true);\r\n    fetchDashboardData();\r\n  };\r\n\r\n  const toggleAvailability = async () => {\r\n    try {\r\n      const newAvailability = !isAvailable;\r\n      await locationAPI.toggleAvailability(newAvailability);\r\n      setIsAvailable(newAvailability);\r\n      \r\n      Alert.alert(\r\n        'Status Updated',\r\n        `You are now ${newAvailability ? 'available' : 'unavailable'} for deliveries`\r\n      );\r\n    } catch (error) {\r\n      console.error('Error toggling availability:', error);\r\n      Alert.alert('Error', 'Failed to update availability status');\r\n    }\r\n  };\r\n\r\n  const handleAcceptOrder = async (orderId) => {\r\n    try {\r\n      await orderAPI.acceptOrder(orderId);\r\n      Alert.alert('Success', 'Order accepted successfully');\r\n      fetchDashboardData();\r\n    } catch (error) {\r\n      console.error('Error accepting order:', error);\r\n      Alert.alert('Error', 'Failed to accept order');\r\n    }\r\n  };\r\n\r\n  const getStatusColor = (status) => {\r\n    switch (status) {\r\n      case 'pending': return '#f59e0b';\r\n      case 'accepted': return '#3b82f6';\r\n      case 'in_transit': return '#8b5cf6';\r\n      case 'delivered': return '#10b981';\r\n      default: return '#6b7280';\r\n    }\r\n  };\r\n\r\n  const getStatusText = (status) => {\r\n    switch (status) {\r\n      case 'pending': return 'New Order';\r\n      case 'accepted': return 'Accepted';\r\n      case 'in_transit': return 'In Transit';\r\n      case 'delivered': return 'Delivered';\r\n      default: return status;\r\n    }\r\n  };\r\n\r\n  if (loading) {\r\n    return (\r\n      <View style={styles.loadingContainer}>\r\n        <ActivityIndicator size=\"large\" color={theme.colors.primary} />\r\n        <Paragraph style={styles.loadingText}>Loading dashboard...</Paragraph>\r\n      </View>\r\n    );\r\n  }\r\n\r\n  return (\r\n    <View style={styles.container}>\r\n      <ScrollView\r\n        style={styles.scrollView}\r\n        refreshControl={\r\n          <RefreshControl refreshing={refreshing} onRefresh={onRefresh} />\r\n        }\r\n      >\r\n        {/* Header */}\r\n        <View style={styles.header}>\r\n          <View>\r\n            <Title style={styles.greeting}>\r\n              Hello, {driver?.name || 'Driver'}!\r\n            </Title>\r\n            <Paragraph style={styles.subtitle}>\r\n              Ready to make some deliveries?\r\n            </Paragraph>\r\n          </View>\r\n          <Button\r\n            mode=\"text\"\r\n            icon=\"logout\"\r\n            onPress={logout}\r\n            style={styles.logoutButton}\r\n          >\r\n            Logout\r\n          </Button>\r\n        </View>\r\n\r\n        {/* Availability Toggle */}\r\n        <Card style={styles.card}>\r\n          <Card.Content style={styles.availabilityCard}>\r\n            <View style={styles.availabilityInfo}>\r\n              <Ionicons\r\n                name={isAvailable ? \"checkmark-circle\" : \"close-circle\"}\r\n                size={24}\r\n                color={isAvailable ? theme.colors.success : theme.colors.error}\r\n              />\r\n              <Title style={styles.availabilityTitle}>\r\n                {isAvailable ? 'Online' : 'Offline'}\r\n              </Title>\r\n            </View>\r\n            <Switch\r\n              value={isAvailable}\r\n              onValueChange={toggleAvailability}\r\n              color={theme.colors.primary}\r\n            />\r\n          </Card.Content>\r\n        </Card>\r\n\r\n        {/* Earnings Summary */}\r\n        <Card style={styles.card}>\r\n          <Card.Content>\r\n            <Title style={styles.sectionTitle}>Today's Earnings</Title>\r\n            <View style={styles.earningsGrid}>\r\n              <View style={styles.earningItem}>\r\n                <Paragraph style={styles.earningLabel}>Today</Paragraph>\r\n                <Title style={[styles.earningAmount, { color: theme.colors.primary }]}>\r\n                  ₹{earnings.today}\r\n                </Title>\r\n              </View>\r\n              <View style={styles.earningItem}>\r\n                <Paragraph style={styles.earningLabel}>This Week</Paragraph>\r\n                <Title style={[styles.earningAmount, { color: theme.colors.secondary }]}>\r\n                  ₹{earnings.week}\r\n                </Title>\r\n              </View>\r\n              <View style={styles.earningItem}>\r\n                <Paragraph style={styles.earningLabel}>This Month</Paragraph>\r\n                <Title style={[styles.earningAmount, { color: theme.colors.accent }]}>\r\n                  ₹{earnings.month}\r\n                </Title>\r\n              </View>\r\n              <View style={styles.earningItem}>\r\n                <Paragraph style={styles.earningLabel}>Total</Paragraph>\r\n                <Title style={[styles.earningAmount, { color: theme.colors.primary }]}>\r\n                  ₹{earnings.total}\r\n                </Title>\r\n              </View>\r\n            </View>\r\n          </Card.Content>\r\n        </Card>\r\n\r\n        {/* Orders Section */}\r\n        <View style={styles.ordersHeader}>\r\n          <Title style={styles.sectionTitle}>\r\n            Orders ({orders.length})\r\n          </Title>\r\n          {orders.length > 0 && (\r\n            <Badge style={styles.ordersBadge}>{orders.length}</Badge>\r\n          )}\r\n        </View>\r\n\r\n        {orders.length === 0 ? (\r\n          <Card style={styles.card}>\r\n            <Card.Content style={styles.emptyState}>\r\n              <Ionicons name=\"car-outline\" size={48} color={theme.colors.disabled} />\r\n              <Paragraph style={styles.emptyStateText}>\r\n                {isAvailable\r\n                  ? \"No orders available at the moment\"\r\n                  : \"Go online to receive orders\"}\r\n              </Paragraph>\r\n            </Card.Content>\r\n          </Card>\r\n        ) : (\r\n          orders.map((order) => (\r\n            <Card key={order._id} style={styles.orderCard}>\r\n              <Card.Content>\r\n                <View style={styles.orderHeader}>\r\n                  <Title style={styles.orderTitle}>\r\n                    Order #{order.orderNumber || order._id.slice(-6)}\r\n                  </Title>\r\n                  <Chip\r\n                    style={[styles.statusChip, { backgroundColor: getStatusColor(order.status) }]}\r\n                    textStyle={{ color: 'white' }}\r\n                  >\r\n                    {getStatusText(order.status)}\r\n                  </Chip>\r\n                </View>\r\n                \r\n                <View style={styles.orderDetails}>\r\n                  <View style={styles.orderDetailRow}>\r\n                    <Ionicons name=\"location-outline\" size={16} color={theme.colors.primary} />\r\n                    <Paragraph style={styles.orderDetailText}>\r\n                      {order.pickupAddress || 'Pickup address not available'}\r\n                    </Paragraph>\r\n                  </View>\r\n                  <View style={styles.orderDetailRow}>\r\n                    <Ionicons name=\"navigate-outline\" size={16} color={theme.colors.secondary} />\r\n                    <Paragraph style={styles.orderDetailText}>\r\n                      {order.deliveryAddress || order.shippingAddress || 'Delivery address not available'}\r\n                    </Paragraph>\r\n                  </View>\r\n                  <View style={styles.orderDetailRow}>\r\n                    <Ionicons name=\"cash-outline\" size={16} color={theme.colors.success} />\r\n                    <Paragraph style={styles.orderDetailText}>\r\n                      Delivery Fee: ₹{order.deliveryFee || 50}\r\n                    </Paragraph>\r\n                  </View>\r\n                </View>\r\n\r\n                <View style={styles.orderActions}>\r\n                  {order.status === 'pending' && (\r\n                    <Button\r\n                      mode=\"contained\"\r\n                      onPress={() => handleAcceptOrder(order._id)}\r\n                      style={styles.acceptButton}\r\n                      icon=\"check\"\r\n                    >\r\n                      Accept Order\r\n                    </Button>\r\n                  )}\r\n                  <Button\r\n                    mode=\"outlined\"\r\n                    onPress={() => navigation.navigate('OrderDetails', { orderId: order._id })}\r\n                    style={styles.detailsButton}\r\n                    icon=\"eye\"\r\n                  >\r\n                    View Details\r\n                  </Button>\r\n                </View>\r\n              </Card.Content>\r\n            </Card>\r\n          ))\r\n        )}\r\n      </ScrollView>\r\n\r\n      {/* Floating Action Button */}\r\n      <FAB\r\n        style={styles.fab}\r\n        icon=\"map\"\r\n        onPress={() => navigation.navigate('Map')}\r\n        color=\"white\"\r\n      />\r\n    </View>\r\n  );\r\n};\r\n\r\nconst styles = StyleSheet.create({\r\n  container: {\r\n    flex: 1,\r\n    backgroundColor: '#f8fafc',\r\n  },\r\n  loadingContainer: {\r\n    flex: 1,\r\n    justifyContent: 'center',\r\n    alignItems: 'center',\r\n    backgroundColor: '#f8fafc',\r\n  },\r\n  loadingText: {\r\n    marginTop: 10,\r\n    color: '#6b7280',\r\n  },\r\n  scrollView: {\r\n    flex: 1,\r\n  },\r\n  header: {\r\n    flexDirection: 'row',\r\n    justifyContent: 'space-between',\r\n    alignItems: 'center',\r\n    padding: 20,\r\n    paddingTop: 60,\r\n  },\r\n  greeting: {\r\n    fontSize: 24,\r\n    fontWeight: 'bold',\r\n  },\r\n  subtitle: {\r\n    color: '#6b7280',\r\n    marginTop: 5,\r\n  },\r\n  logoutButton: {\r\n    marginTop: 10,\r\n  },\r\n  card: {\r\n    marginHorizontal: 20,\r\n    marginBottom: 15,\r\n    elevation: 2,\r\n    borderRadius: 12,\r\n  },\r\n  availabilityCard: {\r\n    flexDirection: 'row',\r\n    justifyContent: 'space-between',\r\n    alignItems: 'center',\r\n  },\r\n  availabilityInfo: {\r\n    flexDirection: 'row',\r\n    alignItems: 'center',\r\n  },\r\n  availabilityTitle: {\r\n    marginLeft: 10,\r\n    fontSize: 18,\r\n  },\r\n  sectionTitle: {\r\n    fontSize: 18,\r\n    fontWeight: 'bold',\r\n    marginBottom: 15,\r\n  },\r\n  earningsGrid: {\r\n    flexDirection: 'row',\r\n    flexWrap: 'wrap',\r\n    justifyContent: 'space-between',\r\n  },\r\n  earningItem: {\r\n    width: width * 0.4,\r\n    alignItems: 'center',\r\n    marginBottom: 15,\r\n  },\r\n  earningLabel: {\r\n    fontSize: 12,\r\n    color: '#6b7280',\r\n    marginBottom: 5,\r\n  },\r\n  earningAmount: {\r\n    fontSize: 20,\r\n    fontWeight: 'bold',\r\n  },\r\n  ordersHeader: {\r\n    flexDirection: 'row',\r\n    justifyContent: 'space-between',\r\n    alignItems: 'center',\r\n    paddingHorizontal: 20,\r\n    marginBottom: 10,\r\n  },\r\n  ordersBadge: {\r\n    backgroundColor: '#22c55e',\r\n  },\r\n  orderCard: {\r\n    marginHorizontal: 20,\r\n    marginBottom: 15,\r\n    elevation: 2,\r\n    borderRadius: 12,\r\n  },\r\n  orderHeader: {\r\n    flexDirection: 'row',\r\n    justifyContent: 'space-between',\r\n    alignItems: 'center',\r\n    marginBottom: 15,\r\n  },\r\n  orderTitle: {\r\n    fontSize: 16,\r\n    fontWeight: 'bold',\r\n  },\r\n  statusChip: {\r\n    borderRadius: 20,\r\n  },\r\n  orderDetails: {\r\n    marginBottom: 15,\r\n  },\r\n  orderDetailRow: {\r\n    flexDirection: 'row',\r\n    alignItems: 'center',\r\n    marginBottom: 8,\r\n  },\r\n  orderDetailText: {\r\n    marginLeft: 8,\r\n    flex: 1,\r\n    fontSize: 14,\r\n  },\r\n  orderActions: {\r\n    flexDirection: 'row',\r\n    justifyContent: 'space-between',\r\n  },\r\n  acceptButton: {\r\n    flex: 1,\r\n    marginRight: 10,\r\n  },\r\n  detailsButton: {\r\n    flex: 1,\r\n    marginLeft: 10,\r\n  },\r\n  emptyState: {\r\n    alignItems: 'center',\r\n    paddingVertical: 30,\r\n  },\r\n  emptyStateText: {\r\n    marginTop: 10,\r\n    textAlign: 'center',\r\n    color: '#6b7280',\r\n  },\r\n  fab: {\r\n    position: 'absolute',\r\n    margin: 16,\r\n    right: 0,\r\n    bottom: 0,\r\n    backgroundColor: '#22c55e',\r\n  },\r\n});\r\n\r\nexport default DashboardScreen;\r\n"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}