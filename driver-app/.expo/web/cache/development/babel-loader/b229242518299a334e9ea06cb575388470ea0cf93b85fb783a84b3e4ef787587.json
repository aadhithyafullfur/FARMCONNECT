{"ast":null,"code":"import _asyncToGenerator from \"@babel/runtime/helpers/asyncToGenerator\";\nimport _slicedToArray from \"@babel/runtime/helpers/slicedToArray\";\nimport React, { createContext, useContext, useState, useEffect } from 'react';\nimport AsyncStorage from '@react-native-async-storage/async-storage';\nimport { authAPI } from \"../services/api\";\nimport { jsx as _jsx } from \"react/jsx-runtime\";\nvar AuthContext = createContext({});\nexport var useAuth = function useAuth() {\n  var context = useContext(AuthContext);\n  if (!context) {\n    throw new Error('useAuth must be used within an AuthProvider');\n  }\n  return context;\n};\nexport var AuthProvider = function AuthProvider(_ref) {\n  var children = _ref.children;\n  var _useState = useState(null),\n    _useState2 = _slicedToArray(_useState, 2),\n    driver = _useState2[0],\n    setDriver = _useState2[1];\n  var _useState3 = useState(true),\n    _useState4 = _slicedToArray(_useState3, 2),\n    loading = _useState4[0],\n    setLoading = _useState4[1];\n  var _useState5 = useState(false),\n    _useState6 = _slicedToArray(_useState5, 2),\n    isAuthenticated = _useState6[0],\n    setIsAuthenticated = _useState6[1];\n  useEffect(function () {\n    checkAuthStatus();\n  }, []);\n  var checkAuthStatus = function () {\n    var _ref2 = _asyncToGenerator(function* () {\n      try {\n        var token = yield AsyncStorage.getItem('driverToken');\n        var driverData = yield AsyncStorage.getItem('driverData');\n        if (token && driverData) {\n          setDriver(JSON.parse(driverData));\n          setIsAuthenticated(true);\n        }\n      } catch (error) {\n        console.error('Error checking auth status:', error);\n      } finally {\n        setLoading(false);\n      }\n    });\n    return function checkAuthStatus() {\n      return _ref2.apply(this, arguments);\n    };\n  }();\n  var login = function () {\n    var _ref3 = _asyncToGenerator(function* (email, password) {\n      try {\n        setLoading(true);\n        var response = yield authAPI.login({\n          email: email,\n          password: password\n        });\n        var _response$data = response.data,\n          token = _response$data.token,\n          driverData = _response$data.driver;\n        yield AsyncStorage.setItem('driverToken', token);\n        yield AsyncStorage.setItem('driverData', JSON.stringify(driverData));\n        setDriver(driverData);\n        setIsAuthenticated(true);\n        return {\n          success: true\n        };\n      } catch (error) {\n        var _error$response, _error$response$data;\n        console.error('Login error:', error);\n        return {\n          success: false,\n          message: ((_error$response = error.response) == null ? void 0 : (_error$response$data = _error$response.data) == null ? void 0 : _error$response$data.message) || 'Login failed'\n        };\n      } finally {\n        setLoading(false);\n      }\n    });\n    return function login(_x, _x2) {\n      return _ref3.apply(this, arguments);\n    };\n  }();\n  var register = function () {\n    var _ref4 = _asyncToGenerator(function* (userData) {\n      try {\n        setLoading(true);\n        var response = yield authAPI.register(userData);\n        var _response$data2 = response.data,\n          token = _response$data2.token,\n          driverData = _response$data2.driver;\n        yield AsyncStorage.setItem('driverToken', token);\n        yield AsyncStorage.setItem('driverData', JSON.stringify(driverData));\n        setDriver(driverData);\n        setIsAuthenticated(true);\n        return {\n          success: true\n        };\n      } catch (error) {\n        var _error$response2, _error$response2$data;\n        console.error('Registration error:', error);\n        return {\n          success: false,\n          message: ((_error$response2 = error.response) == null ? void 0 : (_error$response2$data = _error$response2.data) == null ? void 0 : _error$response2$data.message) || 'Registration failed'\n        };\n      } finally {\n        setLoading(false);\n      }\n    });\n    return function register(_x3) {\n      return _ref4.apply(this, arguments);\n    };\n  }();\n  var logout = function () {\n    var _ref5 = _asyncToGenerator(function* () {\n      try {\n        yield AsyncStorage.multiRemove(['driverToken', 'driverData']);\n        setDriver(null);\n        setIsAuthenticated(false);\n      } catch (error) {\n        console.error('Logout error:', error);\n      }\n    });\n    return function logout() {\n      return _ref5.apply(this, arguments);\n    };\n  }();\n  var updateProfile = function () {\n    var _ref6 = _asyncToGenerator(function* (profileData) {\n      try {\n        var response = yield authAPI.updateProfile(profileData);\n        var updatedDriver = response.data.driver;\n        yield AsyncStorage.setItem('driverData', JSON.stringify(updatedDriver));\n        setDriver(updatedDriver);\n        return {\n          success: true\n        };\n      } catch (error) {\n        var _error$response3, _error$response3$data;\n        console.error('Profile update error:', error);\n        return {\n          success: false,\n          message: ((_error$response3 = error.response) == null ? void 0 : (_error$response3$data = _error$response3.data) == null ? void 0 : _error$response3$data.message) || 'Profile update failed'\n        };\n      }\n    });\n    return function updateProfile(_x4) {\n      return _ref6.apply(this, arguments);\n    };\n  }();\n  var value = {\n    driver: driver,\n    loading: loading,\n    isAuthenticated: isAuthenticated,\n    login: login,\n    register: register,\n    logout: logout,\n    updateProfile: updateProfile\n  };\n  return _jsx(AuthContext.Provider, {\n    value: value,\n    children: children\n  });\n};","map":{"version":3,"names":["React","createContext","useContext","useState","useEffect","AsyncStorage","authAPI","jsx","_jsx","AuthContext","useAuth","context","Error","AuthProvider","_ref","children","_useState","_useState2","_slicedToArray","driver","setDriver","_useState3","_useState4","loading","setLoading","_useState5","_useState6","isAuthenticated","setIsAuthenticated","checkAuthStatus","_ref2","_asyncToGenerator","token","getItem","driverData","JSON","parse","error","console","apply","arguments","login","_ref3","email","password","response","_response$data","data","setItem","stringify","success","_error$response","_error$response$data","message","_x","_x2","register","_ref4","userData","_response$data2","_error$response2","_error$response2$data","_x3","logout","_ref5","multiRemove","updateProfile","_ref6","profileData","updatedDriver","_error$response3","_error$response3$data","_x4","value","Provider"],"sources":["D:/Projects/Farmer_connect/FARMCONNECT/driver-app/src/context/AuthContext.js"],"sourcesContent":["import React, { createContext, useContext, useState, useEffect } from 'react';\r\nimport AsyncStorage from '@react-native-async-storage/async-storage';\r\nimport { authAPI } from '../services/api';\r\n\r\nconst AuthContext = createContext({});\r\n\r\nexport const useAuth = () => {\r\n  const context = useContext(AuthContext);\r\n  if (!context) {\r\n    throw new Error('useAuth must be used within an AuthProvider');\r\n  }\r\n  return context;\r\n};\r\n\r\nexport const AuthProvider = ({ children }) => {\r\n  const [driver, setDriver] = useState(null);\r\n  const [loading, setLoading] = useState(true);\r\n  const [isAuthenticated, setIsAuthenticated] = useState(false);\r\n\r\n  useEffect(() => {\r\n    checkAuthStatus();\r\n  }, []);\r\n\r\n  const checkAuthStatus = async () => {\r\n    try {\r\n      const token = await AsyncStorage.getItem('driverToken');\r\n      const driverData = await AsyncStorage.getItem('driverData');\r\n      \r\n      if (token && driverData) {\r\n        setDriver(JSON.parse(driverData));\r\n        setIsAuthenticated(true);\r\n      }\r\n    } catch (error) {\r\n      console.error('Error checking auth status:', error);\r\n    } finally {\r\n      setLoading(false);\r\n    }\r\n  };\r\n\r\n  const login = async (email, password) => {\r\n    try {\r\n      setLoading(true);\r\n      const response = await authAPI.login({ email, password });\r\n      \r\n      const { token, driver: driverData } = response.data;\r\n      \r\n      await AsyncStorage.setItem('driverToken', token);\r\n      await AsyncStorage.setItem('driverData', JSON.stringify(driverData));\r\n      \r\n      setDriver(driverData);\r\n      setIsAuthenticated(true);\r\n      \r\n      return { success: true };\r\n    } catch (error) {\r\n      console.error('Login error:', error);\r\n      return {\r\n        success: false,\r\n        message: error.response?.data?.message || 'Login failed',\r\n      };\r\n    } finally {\r\n      setLoading(false);\r\n    }\r\n  };\r\n\r\n  const register = async (userData) => {\r\n    try {\r\n      setLoading(true);\r\n      const response = await authAPI.register(userData);\r\n      \r\n      const { token, driver: driverData } = response.data;\r\n      \r\n      await AsyncStorage.setItem('driverToken', token);\r\n      await AsyncStorage.setItem('driverData', JSON.stringify(driverData));\r\n      \r\n      setDriver(driverData);\r\n      setIsAuthenticated(true);\r\n      \r\n      return { success: true };\r\n    } catch (error) {\r\n      console.error('Registration error:', error);\r\n      return {\r\n        success: false,\r\n        message: error.response?.data?.message || 'Registration failed',\r\n      };\r\n    } finally {\r\n      setLoading(false);\r\n    }\r\n  };\r\n\r\n  const logout = async () => {\r\n    try {\r\n      await AsyncStorage.multiRemove(['driverToken', 'driverData']);\r\n      setDriver(null);\r\n      setIsAuthenticated(false);\r\n    } catch (error) {\r\n      console.error('Logout error:', error);\r\n    }\r\n  };\r\n\r\n  const updateProfile = async (profileData) => {\r\n    try {\r\n      const response = await authAPI.updateProfile(profileData);\r\n      const updatedDriver = response.data.driver;\r\n      \r\n      await AsyncStorage.setItem('driverData', JSON.stringify(updatedDriver));\r\n      setDriver(updatedDriver);\r\n      \r\n      return { success: true };\r\n    } catch (error) {\r\n      console.error('Profile update error:', error);\r\n      return {\r\n        success: false,\r\n        message: error.response?.data?.message || 'Profile update failed',\r\n      };\r\n    }\r\n  };\r\n\r\n  const value = {\r\n    driver,\r\n    loading,\r\n    isAuthenticated,\r\n    login,\r\n    register,\r\n    logout,\r\n    updateProfile,\r\n  };\r\n\r\n  return <AuthContext.Provider value={value}>{children}</AuthContext.Provider>;\r\n};\r\n"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}