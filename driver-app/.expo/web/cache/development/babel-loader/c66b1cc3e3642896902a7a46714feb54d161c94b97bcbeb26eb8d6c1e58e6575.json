{"ast":null,"code":"import React from 'react';\nimport { NavigationContainer } from '@react-navigation/native';\nimport { createStackNavigator } from '@react-navigation/stack';\nimport { StatusBar } from 'expo-status-bar';\nimport { Provider as PaperProvider } from 'react-native-paper';\nimport { AuthProvider } from \"./src/context/AuthContext\";\nimport LoginScreen from \"./src/screens/LoginScreen\";\nimport DashboardScreen from \"./src/screens/DashboardScreen\";\nimport OrderDetailsScreen from \"./src/screens/OrderDetailsScreen\";\nimport ProfileScreen from \"./src/screens/ProfileScreen\";\nimport MapScreen from \"./src/screens/MapScreen\";\nimport { theme } from \"./src/theme/theme\";\nimport { jsx as _jsx, jsxs as _jsxs } from \"react/jsx-runtime\";\nvar Stack = createStackNavigator();\nexport default function App() {\n  return _jsx(PaperProvider, {\n    theme: theme,\n    children: _jsx(AuthProvider, {\n      children: _jsxs(NavigationContainer, {\n        children: [_jsx(StatusBar, {\n          style: \"auto\"\n        }), _jsxs(Stack.Navigator, {\n          initialRouteName: \"Login\",\n          screenOptions: {\n            headerShown: false\n          },\n          children: [_jsx(Stack.Screen, {\n            name: \"Login\",\n            component: LoginScreen\n          }), _jsx(Stack.Screen, {\n            name: \"Dashboard\",\n            component: DashboardScreen\n          }), _jsx(Stack.Screen, {\n            name: \"OrderDetails\",\n            component: OrderDetailsScreen\n          }), _jsx(Stack.Screen, {\n            name: \"Profile\",\n            component: ProfileScreen\n          }), _jsx(Stack.Screen, {\n            name: \"Map\",\n            component: MapScreen\n          })]\n        })]\n      })\n    })\n  });\n}","map":{"version":3,"names":["React","NavigationContainer","createStackNavigator","StatusBar","Provider","PaperProvider","AuthProvider","LoginScreen","DashboardScreen","OrderDetailsScreen","ProfileScreen","MapScreen","theme","jsx","_jsx","jsxs","_jsxs","Stack","App","children","style","Navigator","initialRouteName","screenOptions","headerShown","Screen","name","component"],"sources":["D:/Projects/Farmer_connect/FARMCONNECT/driver-app/App.js"],"sourcesContent":["import React from 'react';\r\nimport { NavigationContainer } from '@react-navigation/native';\r\nimport { createStackNavigator } from '@react-navigation/stack';\r\nimport { StatusBar } from 'expo-status-bar';\r\nimport { Provider as PaperProvider } from 'react-native-paper';\r\n\r\nimport { AuthProvider } from './src/context/AuthContext';\r\nimport LoginScreen from './src/screens/LoginScreen';\r\nimport DashboardScreen from './src/screens/DashboardScreen';\r\nimport OrderDetailsScreen from './src/screens/OrderDetailsScreen';\r\nimport ProfileScreen from './src/screens/ProfileScreen';\r\nimport MapScreen from './src/screens/MapScreen';\r\nimport { theme } from './src/theme/theme';\r\n\r\nconst Stack = createStackNavigator();\r\n\r\nexport default function App() {\r\n  return (\r\n    <PaperProvider theme={theme}>\r\n      <AuthProvider>\r\n        <NavigationContainer>\r\n          <StatusBar style=\"auto\" />\r\n          <Stack.Navigator\r\n            initialRouteName=\"Login\"\r\n            screenOptions={{\r\n              headerShown: false,\r\n            }}\r\n          >\r\n            <Stack.Screen name=\"Login\" component={LoginScreen} />\r\n            <Stack.Screen name=\"Dashboard\" component={DashboardScreen} />\r\n            <Stack.Screen name=\"OrderDetails\" component={OrderDetailsScreen} />\r\n            <Stack.Screen name=\"Profile\" component={ProfileScreen} />\r\n            <Stack.Screen name=\"Map\" component={MapScreen} />\r\n          </Stack.Navigator>\r\n        </NavigationContainer>\r\n      </AuthProvider>\r\n    </PaperProvider>\r\n  );\r\n}\r\n"],"mappings":"AAAA,OAAOA,KAAK,MAAM,OAAO;AACzB,SAASC,mBAAmB,QAAQ,0BAA0B;AAC9D,SAASC,oBAAoB,QAAQ,yBAAyB;AAC9D,SAASC,SAAS,QAAQ,iBAAiB;AAC3C,SAASC,QAAQ,IAAIC,aAAa,QAAQ,oBAAoB;AAE9D,SAASC,YAAY;AACrB,OAAOC,WAAW;AAClB,OAAOC,eAAe;AACtB,OAAOC,kBAAkB;AACzB,OAAOC,aAAa;AACpB,OAAOC,SAAS;AAChB,SAASC,KAAK;AAA4B,SAAAC,GAAA,IAAAC,IAAA,EAAAC,IAAA,IAAAC,KAAA;AAE1C,IAAMC,KAAK,GAAGf,oBAAoB,CAAC,CAAC;AAEpC,eAAe,SAASgB,GAAGA,CAAA,EAAG;EAC5B,OACEJ,IAAA,CAACT,aAAa;IAACO,KAAK,EAAEA,KAAM;IAAAO,QAAA,EAC1BL,IAAA,CAACR,YAAY;MAAAa,QAAA,EACXH,KAAA,CAACf,mBAAmB;QAAAkB,QAAA,GAClBL,IAAA,CAACX,SAAS;UAACiB,KAAK,EAAC;QAAM,CAAE,CAAC,EAC1BJ,KAAA,CAACC,KAAK,CAACI,SAAS;UACdC,gBAAgB,EAAC,OAAO;UACxBC,aAAa,EAAE;YACbC,WAAW,EAAE;UACf,CAAE;UAAAL,QAAA,GAEFL,IAAA,CAACG,KAAK,CAACQ,MAAM;YAACC,IAAI,EAAC,OAAO;YAACC,SAAS,EAAEpB;UAAY,CAAE,CAAC,EACrDO,IAAA,CAACG,KAAK,CAACQ,MAAM;YAACC,IAAI,EAAC,WAAW;YAACC,SAAS,EAAEnB;UAAgB,CAAE,CAAC,EAC7DM,IAAA,CAACG,KAAK,CAACQ,MAAM;YAACC,IAAI,EAAC,cAAc;YAACC,SAAS,EAAElB;UAAmB,CAAE,CAAC,EACnEK,IAAA,CAACG,KAAK,CAACQ,MAAM;YAACC,IAAI,EAAC,SAAS;YAACC,SAAS,EAAEjB;UAAc,CAAE,CAAC,EACzDI,IAAA,CAACG,KAAK,CAACQ,MAAM;YAACC,IAAI,EAAC,KAAK;YAACC,SAAS,EAAEhB;UAAU,CAAE,CAAC;QAAA,CAClC,CAAC;MAAA,CACC;IAAC,CACV;EAAC,CACF,CAAC;AAEpB","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}